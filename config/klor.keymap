//                               █         █    █            ▄▄▄▀▀▀▀▀▀▄▄▄        █▀▀▀▀▀▀▀▀▀▀█
//                               █        █     █          ▄▀            ▀▄      █          █
//                               █       █      █        ▄▀                ▀▄    █          █
//                               █      █       █        █                  █    █          █
//                               █     █        █       █                    █   █          █
//                               █    █         █       █                    █   █▄▄▄▄▄▄▄▄▄▄█
//                               █   █ █        █       █                    █   █      █
//                               █  █   █       █        █                  █    █       █
//                               █ █     █      █        ▀▄                ▄▀    █        █
//                               ██       █     █          ▀▄            ▄▀      █         █
//                               █         █    █▄▄▄▄▄▄▄▄    ▀▀▀▄▄▄▄▄▄▀▀▀        █          █
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE   0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <430>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        bootloader_left {
            bindings = <&bootloader>;
            key-positions = <0 10 20>;
            timeout-ms = <100>;
            require-prior-idle-ms = <500>;
            slow-release;
        };

        bootloader_right {
            bindings = <&bootloader>;
            key-positions = <9 19 29>;
            timeout-ms = <100>;
            require-prior-idle-ms = <500>;
            slow-release;
        };
    };

    macros {
        ctrl_left: ctrl_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LEFT_ARROW)>;
            label = "CTRL_LEFT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┌───────────────────────────────────────────────────────────┐

            label = "BASE";

            // └───────────────────────────────────────────────────────────┘
            /*           ┌─────────┬─────────┬─────────┬─────────┬─────────┐                    ┌─────────┬─────────┬─────────┬─────────┬─────────┐
             │    Q    │    W    │    F    │    P    │    G    │                    │    J    │    L    │    U    │    Y    │    ;    │   
   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
   │   TAB   │    A    │    R    │    S    │    T    │    D    │                    │    H    │    N    │    E    │    I    │    O    │    "    │
   ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤╭────────╮╭────────╮├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤
   │   DEL   │    Z    │    X    │    C    │    V    │    B    ││  MUTE  ││PLY/PSE ││    K    │    M    │    ,    │    .    │    /    │    \    │
   └─────────┴─────────┴─────────┼─────────┼─────────┼─────────┼╰────────╯╰────────╯┼─────────┼─────────┼─────────┼─────────┴─────────┴─────────┘
                                 │  CTRL   │  LOWER  │  SPACE  │   ALT   ││ CMD/WIN │  ENTER  │  RAISE  │  BSPCE  │  
                                 └─────────┴─────────┴─────────┴─────────┘└─────────┴─────────┴─────────┴─────────┘ */

            bindings = <
              &kp Q           &kp W           &kp F        &kp P        &kp B                             &kp J    &kp L          &kp U        &kp Y            &kp SEMI
&kp NUMBER_2  &hm LEFT_WIN A  &hm LEFT_ALT R  &hm LCTRL S  &hm LSHFT T  &kp G                             &kp M    &hm RSHFT N    &hm RCTRL E  &hm RIGHT_ALT I  &hm RIGHT_WIN O  &kp N3
&kp DEL       &kp X           &kp C           &kp D        &kp V        &kp Z         &trans    &trans    &kp K    &kp H          &kp COMMA    &kp DOT          &kp FSLH         &kp BSLH
                                              &lt 1 TAB    &lt 2 SPACE  &lt 4 ESCAPE  &kp LALT  &kp LGUI  &kp RET  &kp BACKSPACE  &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        LeftAlpha_Symbols {
            bindings = <
        &kp SEMI       &kp Y      &kp U    &kp L   &kp J                   &trans  &trans  &trans  &trans  &trans
&trans  &kp O          &kp I      &kp E    &kp N   &kp M                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp BACKSPACE  &kp COMMA  &kp DOT  &kp H   &kp K   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                  &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Numbers-Symbols {
            bindings = <
        &trans  &kp N6  &kp N5  &kp N4     &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &kp N3  &kp N2  &kp N1  &kp KP_N0  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N9  &kp N8  &kp N7     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Arrows_Symbols1 {
            bindings = <
        &kp LC(LS(RIGHT))    &kp LC(LS(UP))  &kp LC(LS(DOWN))  &kp LC(LS(LEFT))  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &kp RIGHT            &kp UP          &kp DOWN          &kp LEFT          &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(RIGHT_ARROW)  &kp LC(UP)      &kp LC(DOWN)      &kp LC(LEFT)      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                             &trans            &trans            &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Mouse {
            bindings = <
        &trans  &trans  &trans  &trans  &trans                  &trans  &mkp MB1        &msc SCRL_UP    &mkp MB2         &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP     &mmv MOVE_RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans           &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
            >;
        };
    };
};
